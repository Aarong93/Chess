quit
start_col
start_row
c
display start_piece
c
start_piece
quit
cur_eval
quit
c
display move
display cur_eval
q
c
cc
c
display color
display piece
quit
c
display color
c
display piece
quit
c
display piece
c
display val
display color
display pieces
c
pieces
quit
c
pieces
c
pieces
c
display  color
quit
display cur_eval
quit
c
display cur_eval
display move
quit
c
cc
c
display val
display piece
quit
y
quit
!(pieces[1].class == Queen)
!a
a = pieces[1].class == Queen
pieces[1].class == Queen
!pieces[1].class == Queen
pieces[1].class == Queen
pieces[1]
piece
pieces
quit
c
cc
c
cc
c
display val
display piece
display color
quit
piece.class == Pawn
piece.class
piece.class < Pawn
c
display piece.class
display color
displayc
display piece
quit
Piece.class
c
display color
c
display piece
c
piece
pieces[9].class
pieces[9]
pieces
quit
queen.rb uit
c
display @color
c
@color
quit
color
pieces
c
display piece
display all_moves
c
quit
@board.all_moves_with_start(@color)
moves
c
all_moves
c
all_moves
quit
piece_moves
piece
c
piece.moves(self)
piece.moves
piece
piece_moves
quit
@board.all_moves_with_start(@color)
@board.all_moves_with_start
@board
moves
quit
alpha
c
display best_eval
display best_move
display bet_move
c
display best_move
display move
display best_eval
quit
c
display best_move
display best_eval
c
best_eval
quit
quirt
cf
c
cc
c
display color
display colort
display val
c
@grid[@reverse_move[0][0]][@reverse_move[0][1]]
@grid.[@reverse_move[0][0]][@reverse_move[0][1]]
@reverse_move[0]
@reverse_move
quit
c
test_board
display value
display @color
display move
quit
c
\
\c
c
cc
c
cc
c
display value
display @value
display @color
quit
grid
start
display piece
c
piece
c
piece
end_pos
start
grid
c
@board
display @depth
display @color
@color
c
test_board
quit
@color == COLORS[0] ? COLORS[1] : COLORS[0]
@color == COLORS[0]
opp_color
@depth
@color
c
quit
Ã§quit
@color
@board
quit
test_board
c
display best_move
display cur_eval
display best_eval
display @depth
display @color
quit
c
display best_eval
display @depth
display @color
display best_move
quit
move
c
display @color
display cur_eval
c
display cur_eval
display @color
display color
c
cur_eval
c
@color
cur_eval
cur_eva;
quit
continue
c
cc
c
cc
c
cur_eval
n
move
