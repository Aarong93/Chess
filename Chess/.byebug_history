c
display best_eval
display best_move
display bet_move
c
display best_move
display move
display best_eval
quit
c
display best_move
display best_eval
c
best_eval
quit
quirt
cf
c
cc
c
display color
display colort
display val
c
@grid[@reverse_move[0][0]][@reverse_move[0][1]]
@grid.[@reverse_move[0][0]][@reverse_move[0][1]]
@reverse_move[0]
@reverse_move
quit
c
test_board
display value
display @color
display move
quit
c
\
\c
c
cc
c
cc
c
display value
display @value
display @color
quit
grid
start
display piece
c
piece
c
piece
end_pos
start
grid
c
@board
display @depth
display @color
@color
c
test_board
quit
@color == COLORS[0] ? COLORS[1] : COLORS[0]
@color == COLORS[0]
opp_color
@depth
@color
c
quit
Ã§quit
@color
@board
quit
test_board
c
display best_move
display cur_eval
display best_eval
display @depth
display @color
quit
c
display best_eval
display @depth
display @color
display best_move
quit
move
c
display @color
display cur_eval
c
display cur_eval
display @color
display color
c
cur_eval
c
@color
cur_eval
cur_eva;
quit
continue
c
cc
c
cc
c
cur_eval
n
move
