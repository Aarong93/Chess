'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.allRefVals = allRefVals;
exports.clearRefs = clearRefs;
exports.setRefs = setRefs;
exports.refVal = refVal;
exports.clearAll = clearAll;

var _util = require('./util');

/**
 * Usage
 *   this::allRefVals()
 *
 * @return {Object}
 */

function allRefVals() {
  var _this = this;

  var refs = this.refs;
  var obj = {};

  Object.keys(refs).forEach(function (key) {
    var name = key.replace(/[_-][a-z]/ig, function (s) {
      return s.slice(1).toUpperCase();
    });

    obj[name] = refVal.call(_this, key);
  });

  return obj;
}

/**
 * Usage
 *   this::clearRefs()
 */

function clearRefs() {
  var _this2 = this;

  Object.keys(this.refs).forEach(function (ref) {
    _util.clear.call(_this2, ref);
  });
}

/**
 * Usage
 *
 *   this::setRef(obj)
 *
 * @param {Object} obj
 */

function setRefs(obj) {
  var _this3 = this;

  Object.keys(obj).forEach(function (key) {
    refVal.call(_this3, key, obj[key]);
  });
}

/**
 * Usage
 *
 *   this::refVal('some')
 *   this::refVal('some', 'value')
 *
 * @param {String} ref
 * @param {String} val (optional)
 *
 * @return {String}
 */

function refVal(ref, val) {
  ref = this.refs[ref];

  if (!ref) {
    return '';
  }

  if (typeof val === 'undefined') {
    return ref.value || '';
  }

  ref.value = val;
}

function clearAll() {
  var _this4 = this;

  console.warn('use clearRefs()');
  Object.keys(this.refs).forEach(function (ref) {
    _util.clear.call(_this4, ref);
  });
}